diff --git a/tensorflow/lite/micro/muriscv_nn/micro_time.cc b/tensorflow/lite/micro/muriscv_nn/micro_time.cc
new file mode 100644
index 0000000..19917a7
--- /dev/null
+++ b/tensorflow/lite/micro/muriscv_nn/micro_time.cc
@@ -0,0 +1,32 @@
+/*
+ * Copyright (C) 2023 Chair of Electronic Design Automation, TUM
+ *
+ * SPDX-License-Identifier: Apache-2.0
+ *
+ * Licensed under the Apache License, Version 2.0 (the License); you may
+ * not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS, WITHOUT
+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include "tensorflow/lite/micro/micro_time.h"
+
+#include "muriscv_nn_util.h"
+
+namespace tflite {
+
+// Use the time implementation provided by muRISCV-NN. This way, we can measure
+// performance on RISC-V machines. See muriscv_nn_util.h for more infos.
+
+uint32_t ticks_per_second() { return MURISCV_NN_RDTIME_PER_SECOND; }
+
+uint32_t GetCurrentTimeTicks() { return rdtime(); }
+
+}  // namespace tflite
diff --git a/tensorflow/lite/micro/muriscv_nn/system_setup.cc b/tensorflow/lite/micro/muriscv_nn/system_setup.cc
new file mode 100644
index 0000000..b34c1cd
--- /dev/null
+++ b/tensorflow/lite/micro/muriscv_nn/system_setup.cc
@@ -0,0 +1,31 @@
+/*
+ * Copyright (C) 2023 Chair of Electronic Design Automation, TUM
+ *
+ * SPDX-License-Identifier: Apache-2.0
+ *
+ * Licensed under the Apache License, Version 2.0 (the License); you may
+ * not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS, WITHOUT
+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include "tensorflow/lite/micro/system_setup.h"
+
+#include "tensorflow/lite/micro/micro_log.h"
+
+namespace tflite {
+
+// There is not much to do here, yet. But this might change at some point in the
+// future. Things like muriscv_nn_enable_vector() or
+// muriscv_nn_set_rounding_mode() could go here, if needed.
+
+void InitializeTarget() { MicroPrintf("InitalizeTarget muRISCV-NN"); }
+
+}  // namespace tflite
diff --git a/tensorflow/lite/micro/tools/make/Makefile b/tensorflow/lite/micro/tools/make/Makefile
index 4a9f367..b68b1f4 100644
--- a/tensorflow/lite/micro/tools/make/Makefile
+++ b/tensorflow/lite/micro/tools/make/Makefile
@@ -127,9 +127,7 @@ endif

 CC_WARNINGS := \
   -Wsign-compare \
-  -Wdouble-promotion \
   -Wshadow \
-  -Wunused-variable \
   -Wunused-function \
   -Wswitch \
   -Wvla \
@@ -139,6 +137,16 @@ CC_WARNINGS := \
   -Wstrict-aliasing \
   -Wno-unused-parameter

+ifeq ($(TOOLCHAIN), llvm)
+  CC_WARNINGS += \
+    -Wno-unused-but-set-variable
+else
+  CC_WARNINGS += \
+    -Wdouble-promotion \
+    -Wunused-variable \
+    -Wno-stringop-overread
+endif
+
 COMMON_FLAGS := \
   -Werror \
   -fno-unwind-tables \
@@ -176,7 +184,6 @@ ifeq ($(TOOLCHAIN), gcc)
     # GCC on MacOS uses an LLVM backend so we avoid the additional linker flags
     # that are unsupported with LLVM.
     LDFLAGS += \
-      -Wl,--fatal-warnings \
       -Wl,--gc-sections
   endif
 endif
@@ -534,7 +541,8 @@ ifneq ($(OPTIMIZED_KERNEL_DIR),)
     $(error Incorrect OPTIMIZED_KERNEL_DIR: $(RESULT))
   endif

-  include $(MAKEFILE_DIR)/ext_libs/$(OPTIMIZED_KERNEL_DIR).inc
+  # No need for the cmsis_nn external libs makefile when using muRISCV-NN.
+  # include $(MAKEFILE_DIR)/ext_libs/$(OPTIMIZED_KERNEL_DIR).inc
   # Specialize for the optimized kernels
   MICROLITE_CC_KERNEL_SRCS := $(shell python3 $(MAKEFILE_DIR)/specialize_files.py \
 		--base_files "$(MICROLITE_CC_KERNEL_SRCS)" \
@@ -717,6 +725,12 @@ ifeq ($(TOOLCHAIN), armclang)
   $(BINDIR)%.bin: $(BINDIR)%
 		@mkdir -p $(dir $@)
 		$(FROMELF) --bin --output=$@ $<
+# Introduce LLVM option. We want to use the LLVM objcopy when using LLVM compiler.
+else ifeq ($(TOOLCHAIN), llvm)
+  OBJCOPY := $(CP_TOOL)
+  $(BINDIR)%.bin: $(BINDIR)%
+		@mkdir -p $(dir $@)
+		$(OBJCOPY) $< $@ -O binary
 else
   OBJCOPY := ${TARGET_TOOLCHAIN_ROOT}$(TARGET_TOOLCHAIN_PREFIX)objcopy
   $(BINDIR)%.bin: $(BINDIR)%
diff --git a/tensorflow/lite/micro/tools/make/targets/muriscv_nn_makefile.inc b/tensorflow/lite/micro/tools/make/targets/muriscv_nn_makefile.inc
new file mode 100644
index 0000000..e61b748
--- /dev/null
+++ b/tensorflow/lite/micro/tools/make/targets/muriscv_nn_makefile.inc
@@ -0,0 +1,90 @@
+# Copyright (C) 2023 Chair of Electronic Design Automation, TUM
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
+
+MAKEFILE_PATH := $(dir $(abspath $(lastword $(MAKEFILE_LIST))))
+
+# Path to GCC toolchain
+GCC_TOOLCHAIN_ROOT := $(MAKEFILE_PATH)../../../../../../../../Toolchain/$(TARGET_ARCH)
+GCC_TOOLCHAIN_PREFIX := riscv32-unknown-elf
+
+ifneq (,$(MURISCV_NN_LIBS))
+  ifeq (,$(MURISCV_NN_PATH))
+    $(error MURISCV_NN_LIBS provided but not MURISCV_NN_PATH)
+  endif
+endif
+
+# Path to the muriscv_nn library
+MURISCV_NN_PATH := $(MAKEFILE_PATH)../../../../../../../../../muriscv_nn
+
+ifeq (,$(MURISCV_NN_LIBS))
+  THIRD_PARTY_CC_SRCS += $(call recursive_find,$(MURISCV_NN_PATH)/Source,*.c)
+else
+  MICROLITE_LIBS += $(MURISCV_NN_LIBS)
+endif
+THIRD_PARTY_CC_HDRS += $(call recursive_find,$(MURISCV_NN_PATH)/Include,*.h)
+INCLUDES += \
+  -I$(MURISCV_NN_PATH)/Include
+
+# Flags requied in order to compile with RISC-V toolchains
+PLATFORM_FLAGS := \
+  -DTF_LITE_MCU_DEBUG_LOG \
+  -DTF_LITE_USE_CTIME \
+  -DTF_LITE_USE_GLOBAL_MAX \
+  -DTF_LITE_USE_GLOBAL_MIN \
+  -DTF_LITE_USE_GLOBAL_CMATH_FUNCTIONS
+
+# Enable vector extension if requested
+ifeq ($(USE_VEXT), ON)
+  PLATFORM_FLAGS += \
+    -DUSE_VEXT
+endif
+# Enable packed extension if requested
+ifeq ($(USE_PEXT), ON)
+  PLATFORM_FLAGS += \
+    -DUSE_PEXT
+endif
+
+ifeq ($(TOOLCHAIN), gcc)
+
+  TARGET_TOOLCHAIN_ROOT := $(GCC_TOOLCHAIN_ROOT)/bin/
+  TARGET_TOOLCHAIN_PREFIX := $(GCC_TOOLCHAIN_PREFIX)-
+
+  PLATFORM_FLAGS += \
+    -march=$(TARGET_ARCH) \
+    -mabi=ilp32d
+
+else ifeq ($(TOOLCHAIN), llvm)
+
+  CXX_TOOL := clang++-14
+  CC_TOOL := clang-14
+  AR_TOOL := llvm-ar-14
+  CP_TOOL := llvm-objcopy-14
+
+  PLATFORM_FLAGS += \
+  -march=$(TARGET_ARCH) \
+  -mabi=ilp32d \
+  --target=riscv32 \
+  --gcc-toolchain=$(GCC_TOOLCHAIN_ROOT) \
+  --sysroot=$(GCC_TOOLCHAIN_ROOT)/$(GCC_TOOLCHAIN_PREFIX)
+
+  LDFLAGS += -fuse-ld=lld-14
+
+else
+  $(error "TOOLCHAIN=$(TOOLCHAIN) is not supported.")
+endif
+
+# No idea why the C flag variable is called CCFLAGS instead of CFLAGS
+CCFLAGS += $(PLATFORM_FLAGS)
+CXXFLAGS += $(PLATFORM_FLAGS)
diff --git a/tensorflow/lite/micro/kernels/cmsis_nn/add.cc b/tensorflow/lite/micro/kernels/cmsis_nn/add.cc
index 4d50b92..223cdf6 100644
--- a/tensorflow/lite/micro/kernels/cmsis_nn/add.cc
+++ b/tensorflow/lite/micro/kernels/cmsis_nn/add.cc
@@ -15,7 +15,7 @@ limitations under the License.
 
 #include "tensorflow/lite/kernels/internal/reference/add.h"
 
-#include "Include/arm_nnfunctions.h"
+#include "../../../Include/CMSIS/NN/Include/arm_nnfunctions.h"
 #include "tensorflow/lite/c/builtin_op_data.h"
 #include "tensorflow/lite/kernels/internal/quantization_util.h"
 #include "tensorflow/lite/kernels/internal/reference/integer_ops/add.h"
diff --git a/tensorflow/lite/micro/kernels/cmsis_nn/conv.cc b/tensorflow/lite/micro/kernels/cmsis_nn/conv.cc
index bf88e88..422f8e0 100644
--- a/tensorflow/lite/micro/kernels/cmsis_nn/conv.cc
+++ b/tensorflow/lite/micro/kernels/cmsis_nn/conv.cc
@@ -15,7 +15,8 @@ limitations under the License.
 
 #include "tensorflow/lite/micro/kernels/conv.h"
 
-#include "Include/arm_nnfunctions.h"
+#include "../../../Include/CMSIS/NN/Include/arm_nn_types.h"
+#include "../../../Include/CMSIS/NN/Include/arm_nnfunctions.h"
 #include "tensorflow/lite/c/builtin_op_data.h"
 #include "tensorflow/lite/c/common.h"
 #include "tensorflow/lite/kernels/internal/common.h"
diff --git a/tensorflow/lite/micro/kernels/cmsis_nn/depthwise_conv.cc b/tensorflow/lite/micro/kernels/cmsis_nn/depthwise_conv.cc
index 22a5640..b300b57 100644
--- a/tensorflow/lite/micro/kernels/cmsis_nn/depthwise_conv.cc
+++ b/tensorflow/lite/micro/kernels/cmsis_nn/depthwise_conv.cc
@@ -15,7 +15,7 @@ limitations under the License.
 
 #include "tensorflow/lite/micro/kernels/depthwise_conv.h"
 
-#include "Include/arm_nnfunctions.h"
+#include "../../../Include/CMSIS/NN/Include/arm_nnfunctions.h"
 #include "tensorflow/lite/c/builtin_op_data.h"
 #include "tensorflow/lite/c/common.h"
 #include "tensorflow/lite/kernels/internal/common.h"
diff --git a/tensorflow/lite/micro/kernels/cmsis_nn/fully_connected.cc b/tensorflow/lite/micro/kernels/cmsis_nn/fully_connected.cc
index edca07d..45aa00a 100644
--- a/tensorflow/lite/micro/kernels/cmsis_nn/fully_connected.cc
+++ b/tensorflow/lite/micro/kernels/cmsis_nn/fully_connected.cc
@@ -15,7 +15,7 @@ limitations under the License.
 
 #include "tensorflow/lite/micro/kernels/fully_connected.h"
 
-#include "Include/arm_nnfunctions.h"
+#include "../../../Include/CMSIS/NN/Include/arm_nnfunctions.h"
 #include "tensorflow/lite/c/builtin_op_data.h"
 #include "tensorflow/lite/c/common.h"
 #include "tensorflow/lite/kernels/internal/common.h"
diff --git a/tensorflow/lite/micro/kernels/cmsis_nn/mul.cc b/tensorflow/lite/micro/kernels/cmsis_nn/mul.cc
index ca2bdfa..2faa4fc 100644
--- a/tensorflow/lite/micro/kernels/cmsis_nn/mul.cc
+++ b/tensorflow/lite/micro/kernels/cmsis_nn/mul.cc
@@ -15,7 +15,7 @@ limitations under the License.
 
 #include "tensorflow/lite/kernels/internal/reference/mul.h"
 
-#include "Include/arm_nnfunctions.h"
+#include "../../../Include/CMSIS/NN/Include/arm_nnfunctions.h"
 #include "tensorflow/lite/kernels/internal/quantization_util.h"
 #include "tensorflow/lite/kernels/internal/reference/integer_ops/mul.h"
 #include "tensorflow/lite/kernels/internal/reference/process_broadcast_shapes.h"
diff --git a/tensorflow/lite/micro/kernels/cmsis_nn/pooling.cc b/tensorflow/lite/micro/kernels/cmsis_nn/pooling.cc
index b84569c..b25a2e2 100644
--- a/tensorflow/lite/micro/kernels/cmsis_nn/pooling.cc
+++ b/tensorflow/lite/micro/kernels/cmsis_nn/pooling.cc
@@ -14,7 +14,7 @@ limitations under the License.
 ==============================================================================*/
 #include "tensorflow/lite/kernels/internal/reference/pooling.h"
 
-#include "Include/arm_nnfunctions.h"
+#include "../../../Include/CMSIS/NN/Include/arm_nnfunctions.h"
 #include "tensorflow/lite/c/builtin_op_data.h"
 #include "tensorflow/lite/c/common.h"
 #include "tensorflow/lite/kernels/internal/tensor_ctypes.h"
diff --git a/tensorflow/lite/micro/kernels/cmsis_nn/softmax.cc b/tensorflow/lite/micro/kernels/cmsis_nn/softmax.cc
index 4d13a08..04d0ab1 100644
--- a/tensorflow/lite/micro/kernels/cmsis_nn/softmax.cc
+++ b/tensorflow/lite/micro/kernels/cmsis_nn/softmax.cc
@@ -15,7 +15,7 @@ limitations under the License.
 
 #include "tensorflow/lite/micro/kernels/softmax.h"
 
-#include "Include/arm_nnfunctions.h"
+#include "../../../Include/CMSIS/NN/Include/arm_nnfunctions.h"
 #include "tensorflow/lite/c/common.h"
 #include "tensorflow/lite/kernels/internal/common.h"
 #include "tensorflow/lite/kernels/internal/quantization_util.h"
diff --git a/tensorflow/lite/micro/kernels/cmsis_nn/svdf.cc b/tensorflow/lite/micro/kernels/cmsis_nn/svdf.cc
index 99f2a74..5f52a68 100644
--- a/tensorflow/lite/micro/kernels/cmsis_nn/svdf.cc
+++ b/tensorflow/lite/micro/kernels/cmsis_nn/svdf.cc
@@ -15,7 +15,8 @@ limitations under the License.
 
 #include "tensorflow/lite/micro/kernels/svdf.h"
 
-#include "Include/arm_nnfunctions.h"
+#include "../../../Include/CMSIS/NN/Include/arm_nn_types.h"
+#include "../../../Include/CMSIS/NN/Include/arm_nnfunctions.h"
 #include "tensorflow/lite/c/builtin_op_data.h"
 #include "tensorflow/lite/c/common.h"
 #include "tensorflow/lite/kernels/internal/common.h"
 
diff --git a/tensorflow/lite/micro/kernels/cmsis_nn/unidirectional_sequence_lstm.cc b/tensorflow/lite/micro/kernels/cmsis_nn/unidirectional_sequence_lstm.cc
index 4e7402e..6117f84 100644
--- a/tensorflow/lite/micro/kernels/cmsis_nn/unidirectional_sequence_lstm.cc
+++ b/tensorflow/lite/micro/kernels/cmsis_nn/unidirectional_sequence_lstm.cc
@@ -20,7 +20,8 @@ limitations under the License.
 #include <algorithm>
 #include <limits>
 
-#include "Include/arm_nnfunctions.h"
+#include "../../../Include/CMSIS/NN/Include/arm_nn_types.h"
+#include "../../../Include/CMSIS/NN/Include/arm_nnfunctions.h"
 #include "tensorflow/lite/kernels/internal/quantization_util.h"
 #include "tensorflow/lite/kernels/kernel_util.h"
 #include "tensorflow/lite/micro/kernels/fully_connected.h"
