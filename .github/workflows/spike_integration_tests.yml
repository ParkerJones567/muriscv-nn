name: Spike Integration Tests

on:
  schedule:
    # 6am UTC is 7am Central European Time (CET) or 8am Central European Summer Time (CEST).
    - cron: '0 8 * * *'
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    
  workflow_dispatch:
  
  
jobs:
  
  Spike_Integration_Tests_Scalar:
    name: Scalar Integration Tests
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3
    
    - name: Install TFLM dependencies
      run: |
        sudo apt-get install python3-setuptools
        pip3 install wheel
        pip3 install Pillow
        pip3 install Wave
        
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
        
    - name: Download Cached GCC Binaries
      id: cache-gcc
      uses: actions/cache@v3
      env:
          cache-name: cache-gcc-binaries
      with:
          path: ./Toolchain
          key: gcc-binaries-${{ steps.date.outputs.date }}
          restore-keys: |
            gcc-binaries-
            
    - name: Install Spike Dependencies
      run: |
        sudo apt-get install libboost-all-dev
        sudo apt-get install device-tree-compiler
    
    - name: Download Spike Cache
      id: cache-Spike
      uses: actions/cache@v3
      env:
          cache-name: cache-spike-binaries
      with:
          path: ./Sim/Spike/bin
          key: spike-binaries-${{ steps.date.outputs.date }}
          restore-keys: |
            spike-binaries-
      
    - name: Download TFLM
      working-directory: ./Integration/TFLM
      run: git clone https://github.com/tensorflow/tflite-micro.git
      
    - name: Patch TFLM
      working-directory: ./Integration/TFLM/tflite-micro
      run: git apply ../muriscv_nn.patch
      
    - name: Build Scalar muRISCV-NN with gcc
      working-directory: ./Scripts
      run: ./build_one.sh GCC rv32gc
      
    - name: TFLM Integration Test for Scalar muRISCV-NN with gcc
      working-directory: ./Integration/TFLM/tflite-micro
      run: ../tflm_integration_tests.sh OFF OFF RELEASE gcc rv32gc 1024 Spike
      
    - name: Build Scalar muRISCV-NN with llvm
      working-directory: ./Scripts
      run: ./build_one.sh LLVM rv32gc
      
    - name: TFLM Integration Test for Scalar muRISCV-NN with llvm
      working-directory: ./Integration/TFLM/tflite-micro
      run: ../tflm_integration_tests.sh OFF OFF RELEASE llvm rv32gc 1024 Spike
      
      
  Spike_Integration_Tests_Packed:
    name: Packed Integration Tests
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3
    
    - name: Install TFLM dependencies
      run: |
        sudo apt-get install python3-setuptools
        pip3 install wheel
        pip3 install Pillow
        pip3 install Wave
        
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
        
    - name: Download Cached GCC Binaries
      id: cache-gcc
      uses: actions/cache@v3
      env:
          cache-name: cache-gcc-binaries
      with:
          path: ./Toolchain
          key: gcc-binaries-${{ steps.date.outputs.date }}
          restore-keys: |
            gcc-binaries-
            
    - name: Install Spike Dependencies
      run: |
        sudo apt-get install libboost-all-dev
        sudo apt-get install device-tree-compiler
    
    - name: Download Spike Cache
      id: cache-Spike
      uses: actions/cache@v3
      env:
          cache-name: cache-spike-binaries
      with:
          path: ./Sim/Spike/bin
          key: spike-binaries-${{ steps.date.outputs.date }}
          restore-keys: |
            spike-binaries-
      
    - name: Download TFLM
      working-directory: ./Integration/TFLM
      run: git clone https://github.com/tensorflow/tflite-micro.git
      
    - name: Patch TFLM
      working-directory: ./Integration/TFLM/tflite-micro
      run: git apply ../muriscv_nn.patch
      
    - name: Build Scalar muRISCV-NN with gcc
      working-directory: ./Scripts
      run: ./build_one.sh GCC rv32gcp
      
    - name: TFLM Integration Test for Scalar muRISCV-NN with gcc
      working-directory: ./Integration/TFLM/tflite-micro
      run: ../tflm_integration_tests.sh OFF ON RELEASE gcc rv32gcp 1024 Spike
      
  Spike_Integration_Tests_Vector_64:
    name: Vector Integration Tests Len=64
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3
    
    - name: Install TFLM dependencies
      run: |
        sudo apt-get install python3-setuptools
        pip3 install wheel
        pip3 install Pillow
        pip3 install Wave
        
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
        
    - name: Download Cached GCC Binaries
      id: cache-gcc
      uses: actions/cache@v3
      env:
          cache-name: cache-gcc-binaries
      with:
          path: ./Toolchain
          key: gcc-binaries-${{ steps.date.outputs.date }}
          restore-keys: |
            gcc-binaries-
            
    - name: Install Spike Dependencies
      run: |
        sudo apt-get install libboost-all-dev
        sudo apt-get install device-tree-compiler
    
    - name: Download Spike Cache
      id: cache-Spike
      uses: actions/cache@v3
      env:
          cache-name: cache-spike-binaries
      with:
          path: ./Sim/Spike/bin
          key: spike-binaries-${{ steps.date.outputs.date }}
          restore-keys: |
            spike-binaries-
      
    - name: Download TFLM
      working-directory: ./Integration/TFLM
      run: git clone https://github.com/tensorflow/tflite-micro.git
      
    - name: Patch TFLM
      working-directory: ./Integration/TFLM/tflite-micro
      run: git apply ../muriscv_nn.patch
      
    - name: Build Scalar muRISCV-NN with gcc
      working-directory: ./Scripts
      run: ./build_one.sh GCC rv32gcv
      
    - name: TFLM Integration Test for Scalar muRISCV-NN with gcc
      working-directory: ./Integration/TFLM/tflite-micro
      run: ../tflm_integration_tests.sh ON OFF RELEASE gcc rv32gcv 64 Spike
      
    - name: Build Scalar muRISCV-NN with llvm
      working-directory: ./Scripts
      run: ./build_one.sh LLVM rv32gcv
      
    - name: TFLM Integration Test for Scalar muRISCV-NN with llvm
      working-directory: ./Integration/TFLM/tflite-micro
      run: ../tflm_integration_tests.sh ON OFF RELEASE llvm rv32gcv 64 Spike
      
  Spike_Integration_Tests_Vector_128:
    name: Vector Integration Tests Len=128
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3
    
    - name: Install TFLM dependencies
      run: |
        sudo apt-get install python3-setuptools
        pip3 install wheel
        pip3 install Pillow
        pip3 install Wave
        
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
        
    - name: Download Cached GCC Binaries
      id: cache-gcc
      uses: actions/cache@v3
      env:
          cache-name: cache-gcc-binaries
      with:
          path: ./Toolchain
          key: gcc-binaries-${{ steps.date.outputs.date }}
          restore-keys: |
            gcc-binaries-
            
    - name: Install Spike Dependencies
      run: |
        sudo apt-get install libboost-all-dev
        sudo apt-get install device-tree-compiler
    
    - name: Download Spike Cache
      id: cache-Spike
      uses: actions/cache@v3
      env:
          cache-name: cache-spike-binaries
      with:
          path: ./Sim/Spike/bin
          key: spike-binaries-${{ steps.date.outputs.date }}
          restore-keys: |
            spike-binaries-
      
    - name: Download TFLM
      working-directory: ./Integration/TFLM
      run: git clone https://github.com/tensorflow/tflite-micro.git
      
    - name: Patch TFLM
      working-directory: ./Integration/TFLM/tflite-micro
      run: git apply ../muriscv_nn.patch
      
    - name: Build Scalar muRISCV-NN with gcc
      working-directory: ./Scripts
      run: ./build_one.sh GCC rv32gcv
      
    - name: TFLM Integration Test for Scalar muRISCV-NN with gcc
      working-directory: ./Integration/TFLM/tflite-micro
      run: ../tflm_integration_tests.sh ON OFF RELEASE gcc rv32gcv 128 Spike
      
    - name: Build Scalar muRISCV-NN with llvm
      working-directory: ./Scripts
      run: ./build_one.sh LLVM rv32gcv
      
    - name: TFLM Integration Test for Scalar muRISCV-NN with llvm
      working-directory: ./Integration/TFLM/tflite-micro
      run: ../tflm_integration_tests.sh ON OFF RELEASE llvm rv32gcv 128 Spike
      
  Spike_Integration_Tests_Vector_512:
    name: Vector Integration Tests Len=512
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3
    
    - name: Install TFLM dependencies
      run: |
        sudo apt-get install python3-setuptools
        pip3 install wheel
        pip3 install Pillow
        pip3 install Wave
        
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
        
    - name: Download Cached GCC Binaries
      id: cache-gcc
      uses: actions/cache@v3
      env:
          cache-name: cache-gcc-binaries
      with:
          path: ./Toolchain
          key: gcc-binaries-${{ steps.date.outputs.date }}
          restore-keys: |
            gcc-binaries-
    
    - name: Install Spike Dependencies
      run: |
        sudo apt-get install libboost-all-dev
        sudo apt-get install device-tree-compiler
    
    - name: Download Spike Cache
      id: cache-Spike
      uses: actions/cache@v3
      env:
          cache-name: cache-spike-binaries
      with:
          path: ./Sim/Spike/bin
          key: spike-binaries-${{ steps.date.outputs.date }}
          restore-keys: |
            spike-binaries-
      
    - name: Download TFLM
      working-directory: ./Integration/TFLM
      run: git clone https://github.com/tensorflow/tflite-micro.git
      
    - name: Patch TFLM
      working-directory: ./Integration/TFLM/tflite-micro
      run: git apply ../muriscv_nn.patch
      
    - name: Build Scalar muRISCV-NN with gcc
      working-directory: ./Scripts
      run: ./build_one.sh GCC rv32gcv
      
    - name: TFLM Integration Test for Scalar muRISCV-NN with gcc
      working-directory: ./Integration/TFLM/tflite-micro
      run: ../tflm_integration_tests.sh ON OFF RELEASE gcc rv32gcv 512 Spike
      
    - name: Build Scalar muRISCV-NN with llvm
      working-directory: ./Scripts
      run: ./build_one.sh LLVM rv32gcv
      
    - name: TFLM Integration Test for Scalar muRISCV-NN with llvm
      working-directory: ./Integration/TFLM/tflite-micro
      run: ../tflm_integration_tests.sh ON OFF RELEASE llvm rv32gcv 512 Spike
